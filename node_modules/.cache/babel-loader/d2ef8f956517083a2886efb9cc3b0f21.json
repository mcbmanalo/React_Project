{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Random.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../modules/Header\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { SuggestContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagepath = process.env.REACT_APP_POSTER_PATH;\n\nconst Random = () => {\n  _s();\n\n  const suggested = useContext(SuggestContext);\n\n  const getGenres = genreIDs => {\n    if (suggested.loading || genreIDs.length() < 0) return '';\n    let movieGenre = [];\n    suggested.genres.map(genre => {\n      console.log(genreIDs);\n      console.log(genre);\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name); // console.log(genreIDs)\n      // console.log(genre)\n      // if (genreIDs.includes())\n    });\n    return movieGenre.join(', ');\n  }; // const displayMovie = \n  //   <div>\n  //     <img className='image' src={imagepath + suggested.suggestedMovie.poster_path}/>\n  //     <div className='movieContent'>\n  //       <div>{suggested.suggestedMovie.title}</div> \n  //       <div>{getGenres(suggested.suggestedMovie.genre_ids)}</div>\n  //       <div>Release Date: {suggested.suggestedMovie.release_date}</div>\n  //       <div>{suggested.suggestedMovie.overview}</div>\n  //     </div>\n  //   </div>;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), suggested.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [getGenres(suggested.suggestedMovie.genre_ids), suggested.suggestedMovie.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Random, \"RpLjui6lladsVi0Rq/LlU9JINMk=\");\n\n_c = Random;\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Random.js"],"names":["Header","useState","useEffect","useContext","SuggestContext","imagepath","process","env","REACT_APP_POSTER_PATH","Random","suggested","getGenres","genreIDs","loading","length","movieGenre","genres","map","genre","console","log","includes","id","push","name","join","suggestedMovie","genre_ids","title"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,cAAT,QAA+B,QAA/B;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,SAAS,GAAGP,UAAU,CAACC,cAAD,CAA5B;;AAEA,QAAMO,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIF,SAAS,CAACG,OAAV,IAAqBD,QAAQ,CAACE,MAAT,KAAoB,CAA7C,EAAiD,OAAO,EAAP;AACjD,QAAIC,UAAU,GAAG,EAAjB;AACAL,IAAAA,SAAS,CAACM,MAAV,CAAiBC,GAAjB,CAAsBC,KAAD,IAAW;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAIN,QAAQ,CAACS,QAAT,CAAkBH,KAAK,CAACI,EAAxB,CAAJ,EAAiCP,UAAU,CAACQ,IAAX,CAAgBL,KAAK,CAACM,IAAtB,EAHH,CAI9B;AACA;AACA;AACD,KAPD;AAQA,WAAOT,UAAU,CAACU,IAAX,CAAgB,IAAhB,CAAP;AACD,GAZD,CAHmB,CAiBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGf,SAAS,CAACG,OAAV,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAEC;AAAA,iBACGF,SAAS,CAACD,SAAS,CAACgB,cAAV,CAAyBC,SAA1B,CADZ,EAEGjB,SAAS,CAACgB,cAAV,CAAyBE,KAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAxCD;;GAAMnB,M;;KAAAA,M;AA0CN,eAAeA,MAAf","sourcesContent":["import Header from \"../modules/Header\"\nimport { useState, useEffect, useContext } from \"react\"\nimport { SuggestContext } from \"../App\"\n\nconst imagepath = process.env.REACT_APP_POSTER_PATH\n\nconst Random = () => {\n  const suggested = useContext(SuggestContext)\n\n  const getGenres = (genreIDs) => {\n    if (suggested.loading || genreIDs.length() < 0 ) return ''\n    let movieGenre = []\n    suggested.genres.map((genre) => {\n      console.log(genreIDs)\n      console.log(genre)\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name)\n      // console.log(genreIDs)\n      // console.log(genre)\n      // if (genreIDs.includes())\n    })\n    return movieGenre.join(', ')\n  }\n\n  // const displayMovie = \n  //   <div>\n  //     <img className='image' src={imagepath + suggested.suggestedMovie.poster_path}/>\n  //     <div className='movieContent'>\n  //       <div>{suggested.suggestedMovie.title}</div> \n  //       <div>{getGenres(suggested.suggestedMovie.genre_ids)}</div>\n  //       <div>Release Date: {suggested.suggestedMovie.release_date}</div>\n  //       <div>{suggested.suggestedMovie.overview}</div>\n  //     </div>\n  //   </div>;\n  \n  return (\n    <div>\n      <Header/>\n      {suggested.loading ? \n        <div>Loading</div> :\n        <div>\n          {getGenres(suggested.suggestedMovie.genre_ids)}\n          {suggested.suggestedMovie.title}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Random;"]},"metadata":{},"sourceType":"module"}