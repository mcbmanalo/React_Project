{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/TVSeries.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../modules/Header\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { MovieContext, UserContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagepath = process.env.REACT_APP_POSTER_PATH;\nconst key = process.env.REACT_APP_API_KEY;\n\nconst TVSeries = () => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(0); // this will be used for pagination later\n\n  const tvSeries = useContext(MovieContext);\n  const user = useContext(UserContext);\n  const {\n    tvGenre: genres\n  } = user;\n  const {\n    tvList,\n    setNewMovieList\n  } = tvSeries;\n\n  const getGenres = genreIDs => {\n    let movieGenre = [];\n    genres.map(genre => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name);\n    });\n    return movieGenre.join(', ');\n  };\n\n  const generateTVSeries = tvList.results.map(series => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        alt: series.name,\n        src: imagepath + series.poster_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: series.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getGenres(series.genre_ids)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"First Air Date: \", series.first_air_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: series.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, series.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    setCurrentPage(tvList.page);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: generateTVSeries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TVSeries, \"zOlJmj8X3vB0OBTWDwto8r1BRrA=\");\n\n_c = TVSeries;\nexport default TVSeries;\n\nvar _c;\n\n$RefreshReg$(_c, \"TVSeries\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/TVSeries.js"],"names":["Header","React","useState","useContext","useEffect","MovieContext","UserContext","imagepath","process","env","REACT_APP_POSTER_PATH","key","REACT_APP_API_KEY","TVSeries","currentPage","setCurrentPage","tvSeries","user","tvGenre","genres","tvList","setNewMovieList","getGenres","genreIDs","movieGenre","map","genre","includes","id","push","name","join","generateTVSeries","results","series","poster_path","genre_ids","first_air_date","overview","page"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,QAA1C;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA9B;AACA,MAAMC,GAAG,GAAGH,OAAO,CAACC,GAAR,CAAYG,iBAAxB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C,CADqB,CAC6B;;AAClD,QAAMc,QAAQ,GAAGb,UAAU,CAACE,YAAD,CAA3B;AACA,QAAMY,IAAI,GAAGd,UAAU,CAACG,WAAD,CAAvB;AACA,QAAM;AAACY,IAAAA,OAAO,EAACC;AAAT,MAAmBF,IAAzB;AACA,QAAM;AAACG,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAA4BL,QAAlC;;AAEA,QAAMM,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIC,UAAU,GAAG,EAAjB;AACAL,IAAAA,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;AACpB,UAAIH,QAAQ,CAACI,QAAT,CAAkBD,KAAK,CAACE,EAAxB,CAAJ,EAAiCJ,UAAU,CAACK,IAAX,CAAgBH,KAAK,CAACI,IAAtB;AAClC,KAFD;AAGA,WAAON,UAAU,CAACO,IAAX,CAAgB,IAAhB,CAAP;AACD,GAND;;AAQA,QAAMC,gBAAgB,GAAGZ,MAAM,CAACa,OAAP,CAAeR,GAAf,CAAoBS,MAAD,IAAY;AACtD,wBACE;AAAqB,MAAA,SAAS,EAAC,OAA/B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEA,MAAM,CAACJ,IAAnC;AAAyC,QAAA,GAAG,EAAEvB,SAAS,GAAG2B,MAAM,CAACC;AAAjE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA,oBAAMD,MAAM,CAACJ;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMR,SAAS,CAACY,MAAM,CAACE,SAAR;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,yCAAsBF,MAAM,CAACG,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAMH,MAAM,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUJ,MAAM,CAACN,EAAjB;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZwB,CAAzB;AAcAxB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,cAAc,CAACK,MAAM,CAACmB,IAAR,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGP;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzCD;;GAAMnB,Q;;KAAAA,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import Header from \"../modules/Header\";\nimport React, {useState, useContext, useEffect} from 'react';\nimport { MovieContext, UserContext } from \"../App\";\n\nconst imagepath = process.env.REACT_APP_POSTER_PATH\nconst key = process.env.REACT_APP_API_KEY\n\n\nconst TVSeries = () => {\n  const [currentPage, setCurrentPage] = useState(0) // this will be used for pagination later\n  const tvSeries = useContext(MovieContext);\n  const user = useContext(UserContext);\n  const {tvGenre:genres} = user;\n  const {tvList, setNewMovieList} = tvSeries\n\n  const getGenres = (genreIDs) => {\n    let movieGenre = []\n    genres.map((genre) => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name)\n    })\n    return movieGenre.join(', ')\n  }\n\n  const generateTVSeries = tvList.results.map((series) => {\n    return (\n      <div key={series.id} className='movie'>\n        <img className='image' alt={series.name} src={imagepath + series.poster_path}/>\n        <div className='movieContent'>\n          <div>{series.name}</div> \n          <div>{getGenres(series.genre_ids)}</div>\n          <div>First Air Date: {series.first_air_date}</div>\n          <div>{series.overview}</div>\n        </div>\n      </div>\n    )\n  })\n\n  useEffect(() => {\n    setCurrentPage(tvList.page)\n  }, [])\n\n  return (\n    <div className='App'>\n      <Header />\n      <div>\n        {generateTVSeries}\n      </div>\n    </div>\n  )\n}\n\nexport default TVSeries;"]},"metadata":{},"sourceType":"module"}