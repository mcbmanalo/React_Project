{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/Generator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Generator = props => {\n  _s();\n\n  const user = useContext(UserContext);\n  const [isSelectedGenre, setIsSelectedGenre] = useState(false);\n\n  const setSelectedGenres = () => {\n    const selectedGenres = user.selectedGenres.map(genre => genre.name);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedGenres\",\n      children: [\"Selected Genres: \", selectedGenres.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-generator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quotes\",\n      onClick: user.generateMovieTV,\n      children: [\"Surprise yourself!\", setSelectedGenres()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Generator, \"oT72MCt0txn2WuYX6GoTKxT4jvE=\");\n\n_c = Generator;\nexport default Generator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/Generator.js"],"names":["React","useContext","useState","UserContext","Generator","props","user","isSelectedGenre","setIsSelectedGenre","setSelectedGenres","selectedGenres","map","genre","name","join","generateMovieTV"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,IAAI,GAAGL,UAAU,CAACE,WAAD,CAAvB;AACA,QAAM,CAACI,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMO,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,cAAc,GAAGJ,IAAI,CAACI,cAAL,CAAoBC,GAApB,CAAwBC,KAAK,IAAIA,KAAK,CAACC,IAAvC,CAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,sCAAkDH,cAAc,CAACI,IAAf,CAAoB,IAApB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAER,IAAI,CAACS,eAAtC;AAAA,uCAEGN,iBAAiB,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;GAAML,S;;KAAAA,S;AAqBN,eAAeA,SAAf","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { UserContext } from '../App'\n\nconst Generator = (props) => {\n  const user = useContext(UserContext);\n  const [isSelectedGenre, setIsSelectedGenre] = useState(false)\n\n  const setSelectedGenres = () => {\n    const selectedGenres = user.selectedGenres.map(genre => genre.name)\n    return (\n      <div className='selectedGenres'>Selected Genres: {selectedGenres.join(', ')}</div>\n    )\n  }\n\n  return (\n    <div className='App-generator'>\n      <div className='quotes' onClick={user.generateMovieTV}>\n        Surprise yourself!\n        {setSelectedGenres()}\n      </div>\n    </div>\n  )\n}\n\nexport default Generator;"]},"metadata":{},"sourceType":"module"}