{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Movies.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../modules/Header\";\nimport React, { useContext, useEffect } from 'react';\nimport { MovieContext, UserContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagepath = process.env.REACT_APP_POSTER_PATH;\n\nconst Movies = () => {\n  _s();\n\n  const movies = useContext(MovieContext);\n  const user = useContext(UserContext);\n  const {\n    genres\n  } = user;\n  const {\n    movieList\n  } = movies;\n  useEffect(() => {}, []);\n\n  const getGenres = genreIDs => {\n    let movieGenre = [];\n    genres.map(genre => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name);\n    });\n    return movieGenre.join(', ');\n  };\n\n  const generateMovies = movieList.results.map(movie => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: imagepath + movie.poster_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getGenres(movie.genre_ids)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Release Date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: generateMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"VJTyfzNp9SlFA8xphM89E4l4HBw=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Movies.js"],"names":["Header","React","useContext","useEffect","MovieContext","UserContext","imagepath","process","env","REACT_APP_POSTER_PATH","Movies","movies","user","genres","movieList","getGenres","genreIDs","movieGenre","map","genre","includes","id","push","name","join","generateMovies","results","movie","poster_path","original_title","genre_ids","release_date","overview"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,QAA1C;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGT,UAAU,CAACE,YAAD,CAAzB;AACA,QAAMQ,IAAI,GAAGV,UAAU,CAACG,WAAD,CAAvB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAWD,IAAjB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcH,MAApB;AAEAR,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMY,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIC,UAAU,GAAG,EAAjB;AACAJ,IAAAA,MAAM,CAACK,GAAP,CAAYC,KAAD,IAAW;AACpB,UAAIH,QAAQ,CAACI,QAAT,CAAkBD,KAAK,CAACE,EAAxB,CAAJ,EAAiCJ,UAAU,CAACK,IAAX,CAAgBH,KAAK,CAACI,IAAtB;AAClC,KAFD;AAGA,WAAON,UAAU,CAACO,IAAX,CAAgB,IAAhB,CAAP;AACD,GAND;;AAQA,QAAMC,cAAc,GAAGX,SAAS,CAACY,OAAV,CAAkBR,GAAlB,CAAuBS,KAAD,IAAW;AACtD,wBACE;AAAoB,MAAA,SAAS,EAAC,OAA9B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAErB,SAAS,GAAGqB,KAAK,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA,oBAAMD,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMd,SAAS,CAACY,KAAK,CAACG,SAAP;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,uCAAoBH,KAAK,CAACI,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAMJ,KAAK,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUL,KAAK,CAACN,EAAhB;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZsB,CAAvB;AAcA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGI;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvCD;;GAAMf,M;;KAAAA,M;AAyCN,eAAeA,MAAf","sourcesContent":["import Header from \"../modules/Header\";\nimport React, {useContext, useEffect} from 'react';\nimport { MovieContext, UserContext } from \"../App\";\n\nconst imagepath = process.env.REACT_APP_POSTER_PATH\n\nconst Movies = () => {\n  const movies = useContext(MovieContext);\n  const user = useContext(UserContext);\n  const {genres} = user;\n  const {movieList} = movies\n\n  useEffect(() => {\n  }, [])\n\n  const getGenres = (genreIDs) => {\n    let movieGenre = []\n    genres.map((genre) => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name)\n    })\n    return movieGenre.join(', ')\n  }\n\n  const generateMovies = movieList.results.map((movie) => {\n    return (\n      <div key={movie.id} className='movie'>\n        <img className='image' src={imagepath + movie.poster_path}/>\n        <div className='movieContent'>\n          <div>{movie.original_title}</div> \n          <div>{getGenres(movie.genre_ids)}</div>\n          <div>Release Date: {movie.release_date}</div>\n          <div>{movie.overview}</div>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div>\n      <Header/>\n      <div>\n        {generateMovies}\n      </div>\n    </div>\n  )\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}