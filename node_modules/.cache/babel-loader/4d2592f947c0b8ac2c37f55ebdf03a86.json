{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Movies.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../modules/Header\";\nimport React, { useContext, useEffect } from 'react';\nimport { MovieContext, UserContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagepath = process.env.REACT_APP_POSTER_PATH;\n\nconst Movies = () => {\n  _s();\n\n  const movies = useContext(MovieContext);\n  const user = useContext(UserContext);\n  const {\n    genres\n  } = user;\n  const {\n    movieList\n  } = movies;\n  useEffect(() => {}, []);\n\n  const getGenres = genreIDs => {\n    // console.log(genreIDs)\n    const movieGenre = [];\n    genres.map(genre => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name);\n    });\n    movieGenre.map((genreOfMovie, index) => {\n      const key = `${genreOfMovie}-${index}`;\n      console.log(genreOfMovie);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: genreOfMovie\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const generateMovies = movieList.results.map(movie => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: imagepath + movie.poster_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), movie.original_title, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getGenres(movie.genre_ids)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: generateMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"VJTyfzNp9SlFA8xphM89E4l4HBw=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Movies.js"],"names":["Header","React","useContext","useEffect","MovieContext","UserContext","imagepath","process","env","REACT_APP_POSTER_PATH","Movies","movies","user","genres","movieList","getGenres","genreIDs","movieGenre","map","genre","includes","id","push","name","genreOfMovie","index","key","console","log","generateMovies","results","movie","poster_path","original_title","genre_ids"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,QAA1C;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGT,UAAU,CAACE,YAAD,CAAzB;AACA,QAAMQ,IAAI,GAAGV,UAAU,CAACG,WAAD,CAAvB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAWD,IAAjB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcH,MAApB;AAEAR,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAGA,QAAMY,SAAS,GAAIC,QAAD,IAAc;AAC9B;AACA,UAAMC,UAAU,GAAG,EAAnB;AACAJ,IAAAA,MAAM,CAACK,GAAP,CAAYC,KAAD,IAAW;AACpB,UAAIH,QAAQ,CAACI,QAAT,CAAkBD,KAAK,CAACE,EAAxB,CAAJ,EAAiCJ,UAAU,CAACK,IAAX,CAAgBH,KAAK,CAACI,IAAtB;AAClC,KAFD;AAIAN,IAAAA,UAAU,CAACC,GAAX,CAAe,CAACM,YAAD,EAAeC,KAAf,KAAyB;AACtC,YAAMC,GAAG,GAAI,GAAEF,YAAa,IAAGC,KAAM,EAArC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,0BACE;AAAA,kBAAgBA;AAAhB,SAAUE,GAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAND;AAOD,GAdD;;AAgBA,QAAMG,cAAc,GAAGf,SAAS,CAACgB,OAAV,CAAkBZ,GAAlB,CAAuBa,KAAD,IAAW;AACtD,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEzB,SAAS,GAAGyB,KAAK,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,KAAK,CAACE,cAFT,eAGE;AAAA,kBACGlB,SAAS,CAACgB,KAAK,CAACG,SAAP;AADZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVsB,CAAvB;AAYA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7CD;;GAAMnB,M;;KAAAA,M;AA+CN,eAAeA,MAAf","sourcesContent":["import Header from \"../modules/Header\";\nimport React, {useContext, useEffect} from 'react';\nimport { MovieContext, UserContext } from \"../App\";\n\nconst imagepath = process.env.REACT_APP_POSTER_PATH\n\nconst Movies = () => {\n  const movies = useContext(MovieContext);\n  const user = useContext(UserContext);\n  const {genres} = user;\n  const {movieList} = movies\n\n  useEffect(() => {\n  }, [])\n\n  const getGenres = (genreIDs) => {\n    // console.log(genreIDs)\n    const movieGenre = []\n    genres.map((genre) => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name)\n    })\n\n    movieGenre.map((genreOfMovie, index) => {\n      const key = `${genreOfMovie}-${index}`\n      console.log(genreOfMovie)\n      return (\n        <div key={key}>{genreOfMovie}</div>\n      )\n    })\n  }\n\n  const generateMovies = movieList.results.map((movie) => {\n    return (\n      <div>\n        <img className='image' src={imagepath + movie.poster_path}/>\n        {movie.original_title}\n        <div>\n          {getGenres(movie.genre_ids)}\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div>\n      <Header/>\n      <div>\n        {generateMovies}\n      </div>\n    </div>\n  )\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}