{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/GenreOptions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenreOptions = props => {\n  let {\n    genres,\n    addSeletectedGenre\n  } = props;\n  const generateGenres = genres.map((genre, index) => {\n    const key = `${genre}-${index}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: event => addSeletectedGenre(event.target.textContent),\n      children: genre\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-genres\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Choose a genre that you would like to base the generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Genres\",\n      children: generateGenres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GenreOptions;\nexport default GenreOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreOptions\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/GenreOptions.js"],"names":["GenreOptions","props","genres","addSeletectedGenre","generateGenres","map","genre","index","key","event","target","textContent"],"mappings":";;;AACA,MAAMA,YAAY,GAAIC,KAAD,IAAW;AAC9B,MAAI;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAA+BF,KAAnC;AAEA,QAAMG,cAAc,GAAGF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClD,UAAMC,GAAG,GAAI,GAAEF,KAAM,IAAGC,KAAM,EAA9B;AACA,wBAAO;AAAK,MAAA,OAAO,EAAGE,KAAD,IAAWN,kBAAkB,CAACM,KAAK,CAACC,MAAN,CAAaC,WAAd,CAA3C;AAAA,gBAAkFL;AAAlF,OAA4EE,GAA5E;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHsB,CAAvB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBD;;KAAMJ,Y;AAkBN,eAAeA,YAAf","sourcesContent":["\nconst GenreOptions = (props) => {\n  let {genres, addSeletectedGenre} = props;\n\n  const generateGenres = genres.map((genre, index) => {\n    const key = `${genre}-${index}`\n    return <div onClick={(event) => addSeletectedGenre(event.target.textContent)} key={key}>{genre}</div>\n  })\n\n  return (\n    <div className='App-genres'>\n      <div>Choose a genre that you would like to base the generator</div>\n      <div className='Genres'>\n        {generateGenres}\n      </div>\n    </div>\n  )\n}\n\nexport default GenreOptions;"]},"metadata":{},"sourceType":"module"}