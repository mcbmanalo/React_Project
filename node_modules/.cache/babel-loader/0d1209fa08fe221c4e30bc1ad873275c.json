{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/GenreOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenreOptions = () => {\n  _s();\n\n  const user = useContext(UserContext);\n  const generateGenres = user.genres.map(genre => {\n    const key = `${genre.name}-${id}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: event => user.addSelectedGenre(event.target.textContent),\n      children: genre.name\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-genres\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Choose a genre that you would like to base the generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Genres\",\n      children: generateGenres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GenreOptions, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c = GenreOptions;\nexport default GenreOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreOptions\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/GenreOptions.js"],"names":["React","useContext","UserContext","GenreOptions","user","generateGenres","genres","map","genre","key","name","id","event","addSelectedGenre","target","textContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAMC,IAAI,GAAGH,UAAU,CAACC,WAAD,CAAvB;AAEA,QAAMG,cAAc,GAAGD,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAiBC,KAAD,IAAW;AAChD,UAAMC,GAAG,GAAI,GAAED,KAAK,CAACE,IAAK,IAAGC,EAAG,EAAhC;AACA,wBAAO;AAAK,MAAA,OAAO,EAAGC,KAAD,IAAWR,IAAI,CAACS,gBAAL,CAAsBD,KAAK,CAACE,MAAN,CAAaC,WAAnC,CAAzB;AAAA,gBAAqFP,KAAK,CAACE;AAA3F,OAA+ED,GAA/E;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHsB,CAAvB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjBD;;GAAMF,Y;;KAAAA,Y;AAmBN,eAAeA,YAAf","sourcesContent":["import React, {useContext} from 'react';\nimport { UserContext } from '../App'\n\nconst GenreOptions = () => {\n\n  const user = useContext(UserContext);\n\n  const generateGenres = user.genres.map((genre) => {\n    const key = `${genre.name}-${id}`\n    return <div onClick={(event) => user.addSelectedGenre(event.target.textContent)} key={key}>{genre.name}</div>\n  })\n\n  return (\n    <div className='App-genres'>\n      <div>Choose a genre that you would like to base the generator</div>\n      <div className='Genres'>\n        {generateGenres}\n      </div>\n    </div>\n  )\n}\n\nexport default GenreOptions;"]},"metadata":{},"sourceType":"module"}