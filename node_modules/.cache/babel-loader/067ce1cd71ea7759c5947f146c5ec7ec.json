{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Movies from './pages/Movies';\nimport TVSeries from './pages/TVSeries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext();\nconst key = process.env.REACT_APP_API_KEY;\n\nconst UserProvider = props => {\n  const {\n    children,\n    generateMovieTV,\n    addSelectedGenre,\n    genres\n  } = props;\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      generateMovieTV,\n      addSelectedGenre,\n      genres\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UserProvider;\n\nconst getGenres = async () => {\n  const movieResponse = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`);\n  console.log(movieResponse.json());\n};\n\nconst genres = ['Action', 'Adventure', 'Animation', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'History', 'Horror', 'Music', 'Mystery'];\n\nfunction App() {\n  _s();\n\n  const [selectedGenres, setSelectedGenres] = useState([]);\n\n  const addSelectedGenres = genre => {\n    if (selectedGenres.includes(genre)) return;\n    let newSelectedGenres = [...selectedGenres];\n    newSelectedGenres.push(genre);\n    console.log(newSelectedGenres);\n    setSelectedGenres(newSelectedGenres);\n  };\n\n  const generateMovieTV = () => {\n    console.log('Add code for choosing random movie');\n  };\n\n  useEffect(() => {\n    getGenres();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserProvider, {\n    generateMovieTV: generateMovieTV,\n    addSelectedGenre: addSelectedGenres,\n    genres: genres,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: Home,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          component: Movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tv-series\",\n          component: TVSeries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2PYWrD6S+xEfBdHWjxju6q/J9ck=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Home","Movies","TVSeries","UserContext","createContext","key","process","env","REACT_APP_API_KEY","UserProvider","props","children","generateMovieTV","addSelectedGenre","genres","getGenres","movieResponse","fetch","console","log","json","App","selectedGenres","setSelectedGenres","addSelectedGenres","genre","includes","newSelectedGenres","push"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Movies from './pages/Movies';\nimport TVSeries from './pages/TVSeries';\n\nexport const UserContext = React.createContext();\nconst key = process.env.REACT_APP_API_KEY\n\nconst UserProvider = (props) => {\n  const {children, generateMovieTV, addSelectedGenre, genres} = props\n  return (\n    <UserContext.Provider value={{generateMovieTV, addSelectedGenre, genres}}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nconst getGenres = async() => {\n  const movieResponse = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`)\n  console.log(movieResponse.json());\n}\n\nconst genres = ['Action', 'Adventure', 'Animation', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'History', 'Horror', 'Music', 'Mystery']\n\nfunction App() {\n  const [selectedGenres, setSelectedGenres] = useState([])\n\n  const addSelectedGenres = (genre) => {\n    if (selectedGenres.includes(genre)) return\n    let newSelectedGenres = [...selectedGenres]\n    newSelectedGenres.push(genre)\n    console.log(newSelectedGenres)\n    setSelectedGenres(newSelectedGenres)\n  }\n\n  const generateMovieTV = () => {\n    console.log('Add code for choosing random movie')\n  }\n\n  useEffect(() => {\n    getGenres()\n  }, [])\n  return (\n    <UserProvider generateMovieTV={generateMovieTV} addSelectedGenre={addSelectedGenres} genres={genres}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={Home} exact/>\n          <Route path=\"/movies\" component={Movies}/>\n          <Route path=\"/tv-series\" component={TVSeries}/>\n        </Switch>\n      </Router>\n    </UserProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}