{"ast":null,"code":"import _regeneratorRuntime from\"/home/mcbmanalo/React_Personal_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mcbmanalo/React_Personal_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/mcbmanalo/React_Personal_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/home/mcbmanalo/React_Personal_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import'./App.css';import React,{useState,useEffect}from'react';import{Switch,Route,useHistory}from'react-router-dom';import Home from'./pages/Home';import Movies from'./pages/Movies';import TVSeries from'./pages/TVSeries';import Random from'./pages/Random';import Header from'./modules/Header';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var UserContext=/*#__PURE__*/React.createContext();export var SuggestContext=/*#__PURE__*/React.createContext();var key=process.env.REACT_APP_API_KEY;var movieGenreLink=process.env.REACT_APP_MOVIE_GENRE_URI;var tvGenreLink=process.env.REACT_APP_TV_GENRE_URI;var UserProvider=function UserProvider(props){var children=props.children,generateMovieTV=props.generateMovieTV,isMaxGenre=props.isMaxGenre,addSelectedGenre=props.addSelectedGenre,movieGenre=props.movieGenre,tvGenre=props.tvGenre,selectedGenres=props.selectedGenres,resetSelectedGenres=props.resetSelectedGenres,isMovie=props.isMovie,setMovieOption=props.setMovieOption;return/*#__PURE__*/_jsx(UserContext.Provider,{value:{generateMovieTV:generateMovieTV,isMaxGenre:isMaxGenre,addSelectedGenre:addSelectedGenre,movieGenre:movieGenre,tvGenre:tvGenre,selectedGenres:selectedGenres,resetSelectedGenres:resetSelectedGenres,isMovie:isMovie,setMovieOption:setMovieOption},children:children});};var SuggestProvider=function SuggestProvider(props){var children=props.children,suggestedMovie=props.suggestedMovie,loading=props.loading,genres=props.genres,isMovie=props.isMovie;return/*#__PURE__*/_jsx(SuggestContext.Provider,{value:{suggestedMovie:suggestedMovie,loading:loading,genres:genres,isMovie:isMovie},children:children});};var uniqueArray=function uniqueArray(Genres){return _toConsumableArray(new Map(Genres.map(function(item){return[item.id,item];})).values());};var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedGenres=_useState2[0],setSelectedGenres=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movieGenre=_useState4[0],setMovieGenre=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),tvGenre=_useState6[0],setTVGenre=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),genres=_useState8[0],setGenres=_useState8[1];var _useState9=useState([true]),_useState10=_slicedToArray(_useState9,2),isMovie=_useState10[0],setIsMovie=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),suggestedMovie=_useState12[0],setSuggestedMovie=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),loading=_useState14[0],setLoading=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isMaxGenre=_useState16[0],setIsMaxGenre=_useState16[1];var history=useHistory();var addSelectedGenres=function addSelectedGenres(genre){var nameOfSelectedGenres=selectedGenres.map(function(genre){return genre.name;});if(nameOfSelectedGenres.includes(genre)){var removeItem=selectedGenres.findIndex(function(genre){return genre.name===genre;});var newSelectedGenres=_toConsumableArray(selectedGenres);newSelectedGenres.splice(removeItem,1);setSelectedGenres(newSelectedGenres);setIsMaxGenre(false);return;}if(selectedGenres.length===3){setIsMaxGenre(true);return;}var chosenGenre=_toConsumableArray(selectedGenres);if(isMovie){movieGenre.map(function(genreItem){if(genreItem.name===genre)return chosenGenre.push(genreItem);return null;});setSelectedGenres(chosenGenre);return;}tvGenre.map(function(genreItem){if(genreItem.name===genre)return chosenGenre.push(genreItem);return null;});setSelectedGenres(chosenGenre);};var resetSelectedGenres=function resetSelectedGenres(){setSelectedGenres([]);setIsMovie(true);setIsMaxGenre(false);};var setMovieOption=function setMovieOption(value){setIsMovie(value);setIsMaxGenre(false);};var getGenres=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movieResponse,tvResponse,jsonMovie,jsonTV,allGenres;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(movieGenreLink);case 2:movieResponse=_context.sent;_context.next=5;return fetch(tvGenreLink);case 5:tvResponse=_context.sent;_context.next=8;return movieResponse.json();case 8:jsonMovie=_context.sent;_context.next=11;return tvResponse.json();case 11:jsonTV=_context.sent;allGenres=uniqueArray([].concat(_toConsumableArray(jsonMovie.genres),_toConsumableArray(jsonTV.genres)));setGenres(allGenres);setMovieGenre(jsonMovie.genres);setTVGenre(jsonTV.genres);case 16:case\"end\":return _context.stop();}}},_callee);}));return function getGenres(){return _ref.apply(this,arguments);};}();var makeDiscoverLink=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type,includedGenres){var linkGenres,discoverLink,discoverResponse,discoverJson,max,min,page,finalLink,finalResponse,finalJson,movie;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:linkGenres=includedGenres.join('%2C');discoverLink=\"https://api.themoviedb.org/3/discover/\".concat(type,\"?api_key=\").concat(key,\"&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false&page=1&with_genres=\").concat(linkGenres);_context2.next=4;return fetch(discoverLink);case 4:discoverResponse=_context2.sent;_context2.next=7;return discoverResponse.json();case 7:discoverJson=_context2.sent;max=discoverJson.total_pages+1;min=discoverJson.page;page=Math.floor(Math.random()*(max-min))+min;finalLink=\"https://api.themoviedb.org/3/discover/\".concat(type,\"?api_key=\").concat(key,\"&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false&page=\").concat(page,\"&with_genres=\").concat(linkGenres);_context2.next=14;return fetch(finalLink);case 14:finalResponse=_context2.sent;_context2.next=17;return finalResponse.json();case 17:finalJson=_context2.sent;movie=finalJson.results[Math.floor(Math.random()*finalJson.results.length)];setLoading(false);setSuggestedMovie(movie);case 21:case\"end\":return _context2.stop();}}},_callee2);}));return function makeDiscoverLink(_x,_x2){return _ref2.apply(this,arguments);};}();var generateMovieTV=function generateMovieTV(){setLoading(true);if(isMovie){var _genres=selectedGenres.map(function(genre){return genre.id;});makeDiscoverLink('movie',_genres);history.push('/suggest');return;}var genres=selectedGenres.map(function(genre){return genre.id;});makeDiscoverLink('tv',genres);history.push('/suggest');};useEffect(function(){getGenres();},[]);return/*#__PURE__*/_jsx(UserProvider,{generateMovieTV:generateMovieTV,addSelectedGenre:addSelectedGenres,selectedGenres:selectedGenres,movieGenre:movieGenre,tvGenre:tvGenre,resetSelectedGenres:resetSelectedGenres,isMovie:isMovie,isMaxGenre:isMaxGenre,setMovieOption:setMovieOption,children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{resetSelectedGenres:resetSelectedGenres}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",component:Home,exact:true}),/*#__PURE__*/_jsx(Route,{path:\"/movies\",component:Movies}),/*#__PURE__*/_jsx(Route,{path:\"/tv-series\",component:TVSeries}),/*#__PURE__*/_jsx(SuggestProvider,{suggestedMovie:suggestedMovie,loading:loading,genres:genres,isMovie:isMovie,children:/*#__PURE__*/_jsx(Route,{path:\"/suggest\",component:Random})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"TMDb\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"This product uses the TMDB API but is not endorsed or certified by TMDB\"}),/*#__PURE__*/_jsx(\"img\",{className:\"TMDB-logo\",alt:\"TMDB logo\",src:\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\"})]})]})});};export default App;","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/src/App.js"],"names":["React","useState","useEffect","Switch","Route","useHistory","Home","Movies","TVSeries","Random","Header","UserContext","createContext","SuggestContext","key","process","env","REACT_APP_API_KEY","movieGenreLink","REACT_APP_MOVIE_GENRE_URI","tvGenreLink","REACT_APP_TV_GENRE_URI","UserProvider","props","children","generateMovieTV","isMaxGenre","addSelectedGenre","movieGenre","tvGenre","selectedGenres","resetSelectedGenres","isMovie","setMovieOption","SuggestProvider","suggestedMovie","loading","genres","uniqueArray","Genres","Map","map","item","id","values","App","setSelectedGenres","setMovieGenre","setTVGenre","setGenres","setIsMovie","setSuggestedMovie","setLoading","setIsMaxGenre","history","addSelectedGenres","genre","nameOfSelectedGenres","name","includes","removeItem","findIndex","newSelectedGenres","splice","length","chosenGenre","genreItem","push","value","getGenres","fetch","movieResponse","tvResponse","json","jsonMovie","jsonTV","allGenres","makeDiscoverLink","type","includedGenres","linkGenres","join","discoverLink","discoverResponse","discoverJson","max","total_pages","min","page","Math","floor","random","finalLink","finalResponse","finalJson","movie","results"],"mappings":"ynBAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OACEC,MADF,CAEEC,KAFF,CAGEC,UAHF,KAIO,kBAJP,CAKA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,wFAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGX,KAAK,CAACY,aAAN,EAApB,CACP,MAAO,IAAMC,CAAAA,cAAc,cAAGb,KAAK,CAACY,aAAN,EAAvB,CAEP,GAAME,CAAAA,GAAG,CAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB,CACA,GAAMC,CAAAA,cAAc,CAAGH,OAAO,CAACC,GAAR,CAAYG,yBAAnC,CACA,GAAMC,CAAAA,WAAW,CAAGL,OAAO,CAACC,GAAR,CAAYK,sBAAhC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GAAOC,CAAAA,QAAP,CAAqJD,KAArJ,CAAOC,QAAP,CAAiBC,eAAjB,CAAqJF,KAArJ,CAAiBE,eAAjB,CAAkCC,UAAlC,CAAqJH,KAArJ,CAAkCG,UAAlC,CAA8CC,gBAA9C,CAAqJJ,KAArJ,CAA8CI,gBAA9C,CAAgEC,UAAhE,CAAqJL,KAArJ,CAAgEK,UAAhE,CAA4EC,OAA5E,CAAqJN,KAArJ,CAA4EM,OAA5E,CAAqFC,cAArF,CAAqJP,KAArJ,CAAqFO,cAArF,CAAqGC,mBAArG,CAAqJR,KAArJ,CAAqGQ,mBAArG,CAA0HC,OAA1H,CAAqJT,KAArJ,CAA0HS,OAA1H,CAAmIC,cAAnI,CAAqJV,KAArJ,CAAmIU,cAAnI,CACA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACR,eAAe,CAAfA,eAAD,CAAkBC,UAAU,CAAVA,UAAlB,CAA8BC,gBAAgB,CAAhBA,gBAA9B,CAAgDC,UAAU,CAAVA,UAAhD,CAA4DC,OAAO,CAAPA,OAA5D,CAAqEC,cAAc,CAAdA,cAArE,CAAqFC,mBAAmB,CAAnBA,mBAArF,CAA0GC,OAAO,CAAPA,OAA1G,CAAmHC,cAAc,CAAdA,cAAnH,CAA7B,UACGT,QADH,EADF,CAKD,CAPD,CASA,GAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACX,KAAD,CAAW,CACjC,GAAOC,CAAAA,QAAP,CAA6DD,KAA7D,CAAOC,QAAP,CAAiBW,cAAjB,CAA6DZ,KAA7D,CAAiBY,cAAjB,CAAiCC,OAAjC,CAA6Db,KAA7D,CAAiCa,OAAjC,CAA0CC,MAA1C,CAA6Dd,KAA7D,CAA0Cc,MAA1C,CAAkDL,OAAlD,CAA6DT,KAA7D,CAAkDS,OAAlD,CACA,mBACE,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAACG,cAAc,CAAdA,cAAD,CAAiBC,OAAO,CAAPA,OAAjB,CAA0BC,MAAM,CAANA,MAA1B,CAAkCL,OAAO,CAAPA,OAAlC,CAAhC,UACGR,QADH,EADF,CAKD,CAPD,CASA,GAAMc,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC9B,0BAAW,GAAIC,CAAAA,GAAJ,CAAQD,MAAM,CAACE,GAAP,CAAW,SAAAC,IAAI,QAAI,CAACA,IAAI,CAACC,EAAN,CAAUD,IAAV,CAAJ,EAAf,CAAR,EAA6CE,MAA7C,EAAX,EACD,CAFD,CAIA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAA4C5C,QAAQ,CAAC,EAAD,CAApD,wCAAO6B,cAAP,eAAuBgB,iBAAvB,eACA,eAAoC7C,QAAQ,CAAC,EAAD,CAA5C,yCAAO2B,UAAP,eAAmBmB,aAAnB,eACA,eAA8B9C,QAAQ,CAAC,EAAD,CAAtC,yCAAO4B,OAAP,eAAgBmB,UAAhB,eACA,eAA4B/C,QAAQ,CAAC,EAAD,CAApC,yCAAOoC,MAAP,eAAeY,SAAf,eACA,eAA8BhD,QAAQ,CAAC,CAAC,IAAD,CAAD,CAAtC,0CAAO+B,OAAP,gBAAgBkB,UAAhB,gBACA,gBAA4CjD,QAAQ,CAAC,EAAD,CAApD,2CAAOkC,cAAP,gBAAuBgB,iBAAvB,gBACA,gBAA8BlD,QAAQ,CAAC,KAAD,CAAtC,2CAAOmC,OAAP,gBAAgBgB,UAAhB,gBACA,gBAAoCnD,QAAQ,CAAC,KAAD,CAA5C,2CAAOyB,UAAP,gBAAmB2B,aAAnB,gBACA,GAAMC,CAAAA,OAAO,CAAGjD,UAAU,EAA1B,CAEA,GAAMkD,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnC,GAAMC,CAAAA,oBAAoB,CAAG3B,cAAc,CAACW,GAAf,CAAmB,SAAAe,KAAK,QAAIA,CAAAA,KAAK,CAACE,IAAV,EAAxB,CAA7B,CAEA,GAAID,oBAAoB,CAACE,QAArB,CAA8BH,KAA9B,CAAJ,CAA0C,CACxC,GAAII,CAAAA,UAAU,CAAG9B,cAAc,CAAC+B,SAAf,CAAyB,SAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACE,IAAN,GAAeF,KAAnB,EAA9B,CAAjB,CACA,GAAIM,CAAAA,iBAAiB,oBAAOhC,cAAP,CAArB,CACAgC,iBAAiB,CAACC,MAAlB,CAAyBH,UAAzB,CAAqC,CAArC,EACAd,iBAAiB,CAACgB,iBAAD,CAAjB,CACAT,aAAa,CAAC,KAAD,CAAb,CACA,OACD,CAED,GAAIvB,cAAc,CAACkC,MAAf,GAA0B,CAA9B,CAAiC,CAC/BX,aAAa,CAAC,IAAD,CAAb,CACA,OACD,CAED,GAAIY,CAAAA,WAAW,oBAAOnC,cAAP,CAAf,CACA,GAAIE,OAAJ,CAAa,CACXJ,UAAU,CAACa,GAAX,CAAe,SAACyB,SAAD,CAAe,CAC5B,GAAIA,SAAS,CAACR,IAAV,GAAmBF,KAAvB,CAA8B,MAAOS,CAAAA,WAAW,CAACE,IAAZ,CAAiBD,SAAjB,CAAP,CAC9B,MAAO,KAAP,CACD,CAHD,EAIApB,iBAAiB,CAACmB,WAAD,CAAjB,CACA,OACD,CAEDpC,OAAO,CAACY,GAAR,CAAY,SAACyB,SAAD,CAAe,CACzB,GAAIA,SAAS,CAACR,IAAV,GAAmBF,KAAvB,CAA8B,MAAOS,CAAAA,WAAW,CAACE,IAAZ,CAAiBD,SAAjB,CAAP,CAC9B,MAAO,KAAP,CACD,CAHD,EAIApB,iBAAiB,CAACmB,WAAD,CAAjB,CACD,CAhCD,CAkCA,GAAMlC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChCe,iBAAiB,CAAC,EAAD,CAAjB,CACAI,UAAU,CAAC,IAAD,CAAV,CACAG,aAAa,CAAC,KAAD,CAAb,CACD,CAJD,CAMA,GAAMpB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACmC,KAAD,CAAW,CAChClB,UAAU,CAACkB,KAAD,CAAV,CACAf,aAAa,CAAC,KAAD,CAAb,CACD,CAHD,CAKA,GAAMgB,CAAAA,SAAS,0FAAG,iNACYC,CAAAA,KAAK,CAACpD,cAAD,CADjB,QACVqD,aADU,qCAESD,CAAAA,KAAK,CAAClD,WAAD,CAFd,QAEVoD,UAFU,qCAGQD,CAAAA,aAAa,CAACE,IAAd,EAHR,QAGVC,SAHU,sCAIKF,CAAAA,UAAU,CAACC,IAAX,EAJL,SAIVE,MAJU,eAKVC,SALU,CAKEtC,WAAW,8BAAKoC,SAAS,CAACrC,MAAf,qBAA0BsC,MAAM,CAACtC,MAAjC,GALb,CAMhBY,SAAS,CAAC2B,SAAD,CAAT,CACA7B,aAAa,CAAC2B,SAAS,CAACrC,MAAX,CAAb,CACAW,UAAU,CAAC2B,MAAM,CAACtC,MAAR,CAAV,CARgB,uDAAH,kBAATgC,CAAAA,SAAS,0CAAf,CAWA,GAAMQ,CAAAA,gBAAgB,2FAAG,kBAAMC,IAAN,CAAYC,cAAZ,qOACnBC,UADmB,CACND,cAAc,CAACE,IAAf,CAAoB,KAApB,CADM,CAEnBC,YAFmB,iDAEqCJ,IAFrC,qBAEqDhE,GAFrD,8GAE6JkE,UAF7J,yBAGQV,CAAAA,KAAK,CAACY,YAAD,CAHb,QAGjBC,gBAHiB,uCAIIA,CAAAA,gBAAgB,CAACV,IAAjB,EAJJ,QAIjBW,YAJiB,gBAKnBC,GALmB,CAKbD,YAAY,CAACE,WAAb,CAA2B,CALd,CAMnBC,GANmB,CAMbH,YAAY,CAACI,IANA,CAOnBA,IAPmB,CAOXC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBN,GAAG,CAAGE,GAAvB,CAAX,EAA0CA,GAP/B,CAQnBK,SARmB,iDAQkCd,IARlC,qBAQkDhE,GARlD,gGAQ4I0E,IAR5I,yBAQgKR,UARhK,0BASKV,CAAAA,KAAK,CAACsB,SAAD,CATV,SASjBC,aATiB,wCAUCA,CAAAA,aAAa,CAACpB,IAAd,EAVD,SAUjBqB,SAViB,gBAWnBC,KAXmB,CAWXD,SAAS,CAACE,OAAV,CAAkBP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBG,SAAS,CAACE,OAAV,CAAkBhC,MAA7C,CAAlB,CAXW,CAYvBZ,UAAU,CAAC,KAAD,CAAV,CACAD,iBAAiB,CAAC4C,KAAD,CAAjB,CAbuB,yDAAH,kBAAhBlB,CAAAA,gBAAgB,iDAAtB,CAgBA,GAAMpD,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B2B,UAAU,CAAC,IAAD,CAAV,CACA,GAAGpB,OAAH,CAAY,CACV,GAAMK,CAAAA,OAAM,CAAGP,cAAc,CAACW,GAAf,CAAmB,SAACe,KAAD,QAAWA,CAAAA,KAAK,CAACb,EAAjB,EAAnB,CAAf,CACAkC,gBAAgB,CAAC,OAAD,CAAUxC,OAAV,CAAhB,CACAiB,OAAO,CAACa,IAAR,CAAa,UAAb,EACA,OACD,CACD,GAAM9B,CAAAA,MAAM,CAAGP,cAAc,CAACW,GAAf,CAAmB,SAACe,KAAD,QAAWA,CAAAA,KAAK,CAACb,EAAjB,EAAnB,CAAf,CACAkC,gBAAgB,CAAC,IAAD,CAAOxC,MAAP,CAAhB,CACAiB,OAAO,CAACa,IAAR,CAAa,UAAb,EACD,CAXD,CAaAjE,SAAS,CAAC,UAAM,CACdmE,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,KAAC,YAAD,EACE,eAAe,CAAE5C,eADnB,CAEE,gBAAgB,CAAE8B,iBAFpB,CAGE,cAAc,CAAEzB,cAHlB,CAIE,UAAU,CAAEF,UAJd,CAKE,OAAO,CAAEC,OALX,CAME,mBAAmB,CAAEE,mBANvB,CAOE,OAAO,CAAEC,OAPX,CAQE,UAAU,CAAEN,UARd,CASE,cAAc,CAAEO,cATlB,uBAUI,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,MAAD,EAAQ,mBAAmB,CAAEF,mBAA7B,EADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,SAAS,CAAEzB,IAA3B,CAAiC,KAAK,KAAtC,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,SAAS,CAAEC,MAAjC,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,SAAS,CAAEC,QAApC,EAHF,cAIE,KAAC,eAAD,EAAiB,cAAc,CAAE2B,cAAjC,CAAiD,OAAO,CAAEC,OAA1D,CAAmE,MAAM,CAAEC,MAA3E,CAAmF,OAAO,CAAEL,OAA5F,uBACE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,SAAS,CAAEvB,MAAlC,EADF,EAJF,GAFF,cAUE,aAAK,SAAS,CAAC,MAAf,wBACE,gGADF,cAIE,YAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAC,WAA/B,CAA2C,GAAG,CAAC,iIAA/C,EAJF,GAVF,GAVJ,EADF,CA8BD,CAlID,CAoIA,cAAeoC,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { \n  Switch,\n  Route,\n  useHistory\n} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Movies from './pages/Movies';\nimport TVSeries from './pages/TVSeries';\nimport Random from './pages/Random';\nimport Header from './modules/Header';\n\nexport const UserContext = React.createContext();\nexport const SuggestContext = React.createContext();\n\nconst key = process.env.REACT_APP_API_KEY\nconst movieGenreLink = process.env.REACT_APP_MOVIE_GENRE_URI\nconst tvGenreLink = process.env.REACT_APP_TV_GENRE_URI\n\nconst UserProvider = (props) => {\n  const {children, generateMovieTV, isMaxGenre, addSelectedGenre, movieGenre, tvGenre, selectedGenres, resetSelectedGenres, isMovie, setMovieOption} = props\n  return (\n    <UserContext.Provider value={{generateMovieTV, isMaxGenre, addSelectedGenre, movieGenre, tvGenre, selectedGenres, resetSelectedGenres, isMovie, setMovieOption}}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nconst SuggestProvider = (props) => {\n  const {children, suggestedMovie, loading, genres, isMovie} = props\n  return (\n    <SuggestContext.Provider value={{suggestedMovie, loading, genres, isMovie}}>\n      {children}\n    </SuggestContext.Provider>\n  )\n}\n\nconst uniqueArray = (Genres) => {\n  return [...new Map(Genres.map(item => [item.id, item])).values()]\n}\n\nconst App = () => {\n  const [selectedGenres, setSelectedGenres] = useState([])\n  const [movieGenre, setMovieGenre] = useState([])\n  const [tvGenre, setTVGenre] = useState([])\n  const [genres, setGenres] = useState([])\n  const [isMovie, setIsMovie] = useState([true])\n  const [suggestedMovie, setSuggestedMovie] = useState({})\n  const [loading, setLoading] = useState(false)\n  const [isMaxGenre, setIsMaxGenre] = useState(false)\n  const history = useHistory();\n\n  const addSelectedGenres = (genre) => {\n    const nameOfSelectedGenres = selectedGenres.map(genre => genre.name)\n\n    if (nameOfSelectedGenres.includes(genre)) {\n      let removeItem = selectedGenres.findIndex(genre => genre.name === genre)\n      let newSelectedGenres = [...selectedGenres]\n      newSelectedGenres.splice(removeItem, 1)\n      setSelectedGenres(newSelectedGenres)\n      setIsMaxGenre(false)\n      return\n    }\n\n    if (selectedGenres.length === 3) {\n      setIsMaxGenre(true)\n      return\n    }\n\n    let chosenGenre = [...selectedGenres]\n    if (isMovie) {\n      movieGenre.map((genreItem) => {\n        if (genreItem.name === genre) return chosenGenre.push(genreItem)\n        return null\n      })\n      setSelectedGenres(chosenGenre)\n      return\n    }\n\n    tvGenre.map((genreItem) => {\n      if (genreItem.name === genre) return chosenGenre.push(genreItem)\n      return null\n    })\n    setSelectedGenres(chosenGenre)\n  }\n\n  const resetSelectedGenres = () => {\n    setSelectedGenres([])\n    setIsMovie(true)\n    setIsMaxGenre(false)\n  }\n\n  const setMovieOption = (value) => {\n    setIsMovie(value)\n    setIsMaxGenre(false)\n  }\n\n  const getGenres = async() => {\n    const movieResponse = await fetch(movieGenreLink)\n    const tvResponse = await fetch(tvGenreLink)\n    const jsonMovie = await movieResponse.json()\n    const jsonTV = await tvResponse.json()\n    const allGenres = uniqueArray([...jsonMovie.genres, ...jsonTV.genres])\n    setGenres(allGenres)\n    setMovieGenre(jsonMovie.genres)\n    setTVGenre(jsonTV.genres)\n  }\n\n  const makeDiscoverLink = async(type, includedGenres) => {\n    let linkGenres = includedGenres.join('%2C')\n    let discoverLink = `https://api.themoviedb.org/3/discover/${type}?api_key=${key}&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false&page=1&with_genres=${linkGenres}`\n    const discoverResponse = await fetch(discoverLink)\n    const discoverJson = await discoverResponse.json()\n    let max = discoverJson.total_pages + 1\n    let min = discoverJson.page\n    let page = (Math.floor(Math.random() * (max - min)) + min)\n    let finalLink = `https://api.themoviedb.org/3/discover/${type}?api_key=${key}&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false&page=${page}&with_genres=${linkGenres}`\n    const finalResponse = await fetch(finalLink)\n    const finalJson = await finalResponse.json()\n    let movie = finalJson.results[Math.floor(Math.random() * finalJson.results.length)]\n    setLoading(false)\n    setSuggestedMovie(movie)\n  }\n\n  const generateMovieTV = () => {\n    setLoading(true)\n    if(isMovie) {\n      const genres = selectedGenres.map((genre) => genre.id)\n      makeDiscoverLink('movie', genres)\n      history.push('/suggest')\n      return\n    }\n    const genres = selectedGenres.map((genre) => genre.id)\n    makeDiscoverLink('tv', genres)\n    history.push('/suggest')\n  }\n\n  useEffect(() => {\n    getGenres()\n  }, [])\n  \n  return (\n    <UserProvider \n      generateMovieTV={generateMovieTV} \n      addSelectedGenre={addSelectedGenres}\n      selectedGenres={selectedGenres}\n      movieGenre={movieGenre} \n      tvGenre={tvGenre} \n      resetSelectedGenres={resetSelectedGenres}\n      isMovie={isMovie}\n      isMaxGenre={isMaxGenre}\n      setMovieOption={setMovieOption}>\n        <div className='App'>\n          <Header resetSelectedGenres={resetSelectedGenres}/>\n          <Switch>\n            <Route path=\"/\" component={Home} exact/>\n            <Route path=\"/movies\" component={Movies}/>\n            <Route path=\"/tv-series\" component={TVSeries}/>\n            <SuggestProvider suggestedMovie={suggestedMovie} loading={loading} genres={genres} isMovie={isMovie}>\n              <Route path=\"/suggest\" component={Random} />\n            </SuggestProvider>\n          </Switch>\n          <div className='TMDb'>\n            <div>\n              This product uses the TMDB API but is not endorsed or certified by TMDB\n            </div>\n            <img className='TMDB-logo' alt='TMDB logo' src='https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg'/>\n          </div>\n        </div>\n    </UserProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}