{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Movies.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../modules/Header\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { MovieContext, UserContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagepath = process.env.REACT_APP_POSTER_PATH;\nconst discoverMovie = process.env.REACT_APP_MOVIE_LIST;\n\nconst Movies = () => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]); // const movies = useContext(MovieContext);\n\n  const user = useContext(UserContext);\n  const {\n    genres\n  } = user; // const {movieList} = movies\n\n  const getGenres = genreIDs => {\n    let movieGenre = [];\n    genres.map(genre => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name);\n    });\n    return movieGenre.join(', ');\n  };\n\n  const getMovieList = async () => {\n    const movieListResponse = await fetch(discoverMovie);\n    const jsonMovieList = await movieListResponse.json();\n    console.log(`getMovieList result${jsonMovieList.results}`);\n    setMovieList(jsonMovieList);\n  };\n\n  const generateMovies = () => {\n    console.log(`Movie List: ${movieList}`);\n    movieList.results.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image\",\n          src: imagepath + movie.poster_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getGenres(movie.genre_ids)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Release Date: \", movie.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    getMovieList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: generateMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"oVGDO2WtVyGvjeWnEyyivfap66o=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Movies.js"],"names":["Header","React","useContext","useEffect","useState","MovieContext","UserContext","imagepath","process","env","REACT_APP_POSTER_PATH","discoverMovie","REACT_APP_MOVIE_LIST","Movies","movieList","setMovieList","user","genres","getGenres","genreIDs","movieGenre","map","genre","includes","id","push","name","join","getMovieList","movieListResponse","fetch","jsonMovieList","json","console","log","results","generateMovies","movie","poster_path","original_title","genre_ids","release_date","overview"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,QAA1C;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA9B;AACA,MAAMC,aAAa,GAAGH,OAAO,CAACC,GAAR,CAAYG,oBAAlC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CADmB,CAEnB;;AACA,QAAMY,IAAI,GAAGd,UAAU,CAACI,WAAD,CAAvB;AACA,QAAM;AAACW,IAAAA;AAAD,MAAWD,IAAjB,CAJmB,CAKnB;;AAEA,QAAME,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIC,UAAU,GAAG,EAAjB;AACAH,IAAAA,MAAM,CAACI,GAAP,CAAYC,KAAD,IAAW;AACpB,UAAIH,QAAQ,CAACI,QAAT,CAAkBD,KAAK,CAACE,EAAxB,CAAJ,EAAiCJ,UAAU,CAACK,IAAX,CAAgBH,KAAK,CAACI,IAAtB;AAClC,KAFD;AAGA,WAAON,UAAU,CAACO,IAAX,CAAgB,IAAhB,CAAP;AACD,GAND;;AAQA,QAAMC,YAAY,GAAG,YAAW;AAC9B,UAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAACnB,aAAD,CAArC;AACA,UAAMoB,aAAa,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,EAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBH,aAAa,CAACI,OAAQ,EAAxD;AACApB,IAAAA,YAAY,CAACgB,aAAD,CAAZ;AACD,GALD;;AAOA,QAAMK,cAAc,GAAG,MAAM;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcpB,SAAU,EAArC;AACAA,IAAAA,SAAS,CAACqB,OAAV,CAAkBd,GAAlB,CAAuBgB,KAAD,IAAW;AAC/B,0BACE;AAAoB,QAAA,SAAS,EAAC,OAA9B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,GAAG,EAAE9B,SAAS,GAAG8B,KAAK,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,sBAAMD,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAMrB,SAAS,CAACmB,KAAK,CAACG,SAAP;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,yCAAoBH,KAAK,CAACI,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAMJ,KAAK,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUL,KAAK,CAACb,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZD;AAaD,GAfD;;AAiBArB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGQ;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnDD;;GAAMvB,M;;KAAAA,M;AAqDN,eAAeA,MAAf","sourcesContent":["import Header from \"../modules/Header\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport { MovieContext, UserContext } from \"../App\";\n\nconst imagepath = process.env.REACT_APP_POSTER_PATH\nconst discoverMovie = process.env.REACT_APP_MOVIE_LIST\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]) \n  // const movies = useContext(MovieContext);\n  const user = useContext(UserContext);\n  const {genres} = user;\n  // const {movieList} = movies\n\n  const getGenres = (genreIDs) => {\n    let movieGenre = []\n    genres.map((genre) => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name)\n    })\n    return movieGenre.join(', ')\n  }\n\n  const getMovieList = async() => {\n    const movieListResponse = await fetch(discoverMovie)\n    const jsonMovieList = await movieListResponse.json()\n    console.log(`getMovieList result${jsonMovieList.results}`)\n    setMovieList(jsonMovieList) \n  }\n\n  const generateMovies = () => {\n    console.log(`Movie List: ${movieList}`)\n    movieList.results.map((movie) => {\n      return (\n        <div key={movie.id} className='movie'>\n          <img className='image' src={imagepath + movie.poster_path}/>\n          <div className='movieContent'>\n            <div>{movie.original_title}</div> \n            <div>{getGenres(movie.genre_ids)}</div>\n            <div>Release Date: {movie.release_date}</div>\n            <div>{movie.overview}</div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  useEffect(() => {\n    getMovieList()\n  }, [])\n\n  return (\n    <div>\n      <Header/>\n      <div>\n        {generateMovies}\n      </div>\n    </div>\n  )\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}