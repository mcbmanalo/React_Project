{"ast":null,"code":"import _regeneratorRuntime from\"/home/mcbmanalo/React_Personal_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mcbmanalo/React_Personal_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/mcbmanalo/React_Personal_Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{UserContext}from\"../App\";import Pagination from\"../modules/Pagination\";import Loading from\"../modules/Loading\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var imagepath=process.env.REACT_APP_POSTER_PATH;var discoverMovie=process.env.REACT_APP_MOVIE_LIST;var key=process.env.REACT_APP_API_KEY;var Movies=function Movies(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieList=_useState2[0],setNewMovieList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),currentPage=_useState6[0],setCurrentPage=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),lastPage=_useState8[0],setLastPage=_useState8[1];var user=useContext(UserContext);var genres=user.movieGenre;var getMovieList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movieListResponse,jsonMovieList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(discoverMovie);case 2:movieListResponse=_context.sent;_context.next=5;return movieListResponse.json();case 5:jsonMovieList=_context.sent;setNewMovieList(jsonMovieList.results);setCurrentPage(jsonMovieList.page);setLastPage(jsonMovieList.total_pages);setLoading(false);case 10:case\"end\":return _context.stop();}}},_callee);}));return function getMovieList(){return _ref.apply(this,arguments);};}();var getGenres=function getGenres(genreIDs){var movieGenre=[];genres.map(function(genre){if(genreIDs.includes(genre.id))movieGenre.push(genre.name);});return movieGenre.join(', ');};var setPagination=function setPagination(pageNumber){setLoading(true);setCurrentPage(pageNumber);generateNewMoviesPage(pageNumber);};var generateNewMoviesPage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(page){var discoverMovieLink,newMovieList,newMovieListResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:discoverMovieLink=\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(key,\"&language=en-US&sort_by=popularity.desc&page=\").concat(page);_context2.next=3;return fetch(discoverMovieLink);case 3:newMovieList=_context2.sent;_context2.next=6;return newMovieList.json();case 6:newMovieListResult=_context2.sent;setNewMovieList(newMovieListResult.results);setLoading(false);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function generateNewMoviesPage(_x){return _ref2.apply(this,arguments);};}();var generateMovies=function generateMovies(){if(movieList.length>0){return movieList.map(function(movie){return/*#__PURE__*/_jsxs(\"div\",{className:\"movie\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"image\",alt:movie.title,src:imagepath+movie.poster_path}),/*#__PURE__*/_jsxs(\"div\",{className:\"movieContent\",children:[/*#__PURE__*/_jsx(\"div\",{children:movie.title}),/*#__PURE__*/_jsx(\"div\",{children:getGenres(movie.genre_ids)}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Release Date: \",movie.release_date]}),/*#__PURE__*/_jsx(\"div\",{children:movie.overview})]})]},movie.id);});}};useEffect(function(){setLoading(true);getMovieList();},[]);return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(Loading,{}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:generateMovies()}),/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,setCurrentPage:setPagination,lastPage:lastPage})]})});};export default Movies;","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/src/pages/Movies.js"],"names":["React","useState","useContext","useEffect","UserContext","Pagination","Loading","imagepath","process","env","REACT_APP_POSTER_PATH","discoverMovie","REACT_APP_MOVIE_LIST","key","REACT_APP_API_KEY","Movies","movieList","setNewMovieList","loading","setLoading","currentPage","setCurrentPage","lastPage","setLastPage","user","genres","movieGenre","getMovieList","fetch","movieListResponse","json","jsonMovieList","results","page","total_pages","getGenres","genreIDs","map","genre","includes","id","push","name","join","setPagination","pageNumber","generateNewMoviesPage","discoverMovieLink","newMovieList","newMovieListResult","generateMovies","length","movie","title","poster_path","genre_ids","release_date","overview"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport { UserContext } from \"../App\";\nimport Pagination from \"../modules/Pagination\";\nimport Loading from \"../modules/Loading\";\n\nconst imagepath = process.env.REACT_APP_POSTER_PATH\nconst discoverMovie = process.env.REACT_APP_MOVIE_LIST\nconst key = process.env.REACT_APP_API_KEY\n\nconst Movies = () => {\n  const [movieList, setNewMovieList] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [lastPage, setLastPage] = useState(1)\n  const user = useContext(UserContext);\n  const {movieGenre: genres} = user;\n\n  const getMovieList = async() => {\n    const movieListResponse = await fetch(discoverMovie)\n    const jsonMovieList = await movieListResponse.json()\n    setNewMovieList(jsonMovieList.results)\n    setCurrentPage(jsonMovieList.page)\n    setLastPage(jsonMovieList.total_pages)\n    setLoading(false)\n  }\n\n  const getGenres = (genreIDs) => {\n    let movieGenre = []\n    genres.map((genre) => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name)\n    })\n    return movieGenre.join(', ')\n  }\n\n  const setPagination = (pageNumber) => {\n    setLoading(true)\n    setCurrentPage(pageNumber)\n    generateNewMoviesPage(pageNumber)\n  }\n\n  const generateNewMoviesPage = async(page) => {\n    let discoverMovieLink = `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=en-US&sort_by=popularity.desc&page=${page}`\n    const newMovieList = await fetch(discoverMovieLink)\n    const newMovieListResult = await newMovieList.json()\n    setNewMovieList(newMovieListResult.results)\n    setLoading(false)\n  }\n\n  const generateMovies = () => {\n    if (movieList.length > 0) {\n      return (\n        movieList.map((movie) => {\n          return (\n            <div key={movie.id} className='movie'>\n              <img className='image' alt={movie.title} src={imagepath + movie.poster_path}/>\n              <div className='movieContent'>\n                <div>{movie.title}</div> \n                <div>{getGenres(movie.genre_ids)}</div>\n                <div>Release Date: {movie.release_date}</div>\n                <div>{movie.overview}</div>\n              </div>\n            </div>\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    getMovieList()\n  }, [])\n\n  return (\n    <div>\n      {\n        loading ? \n        <Loading/> :\n        <div>\n          <div>\n           {generateMovies()}\n          </div>\n          <Pagination currentPage={currentPage} setCurrentPage={setPagination} lastPage={lastPage}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}