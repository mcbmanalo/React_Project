{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/GenreOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenreOptions = () => {\n  _s();\n\n  // const [isMovieGenre, setIsMovieGenre] = useState(true)\n  const user = useContext(UserContext);\n  const generateMovieGenres = user.movieGenre.map(genre => {\n    const key = `${genre.name}-${genre.id}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: event => user.addSelectedGenre(event.target.textContent),\n      children: genre.name\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  });\n  const generateTVGenres = user.tvGenre.map(genre => {\n    const key = `${genre.name}-${genre.id}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: event => user.addSelectedGenre(event.target.textContent),\n      children: genre.name\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  });\n\n  const setMovieGenre = () => {\n    if (!user.isMovie) user.setMovieOption([]);\n    user.setMovieOption(true);\n  };\n\n  const setTVGenre = () => {\n    if (user.isMovie) user.setMovieOption([]);\n    user.setMovieOption(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-genres\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: setMovieGenre,\n        children: \"Movie Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: setTVGenre,\n        children: \"TV Series Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Choose a genre that you would like to base the generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isMovieGenre ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Genres\",\n      children: generateMovieGenres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Genres\",\n      children: generateTVGenres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GenreOptions, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c = GenreOptions;\nexport default GenreOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreOptions\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/modules/GenreOptions.js"],"names":["React","useState","useContext","UserContext","GenreOptions","user","generateMovieGenres","movieGenre","map","genre","key","name","id","event","addSelectedGenre","target","textContent","generateTVGenres","tvGenre","setMovieGenre","isMovie","setMovieOption","setTVGenre","isMovieGenre"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AAEA,QAAMC,IAAI,GAAGH,UAAU,CAACC,WAAD,CAAvB;AAEA,QAAMG,mBAAmB,GAAGD,IAAI,CAACE,UAAL,CAAgBC,GAAhB,CAAqBC,KAAD,IAAW;AACzD,UAAMC,GAAG,GAAI,GAAED,KAAK,CAACE,IAAK,IAAGF,KAAK,CAACG,EAAG,EAAtC;AACA,wBAAO;AAAK,MAAA,OAAO,EAAGC,KAAD,IAAWR,IAAI,CAACS,gBAAL,CAAsBD,KAAK,CAACE,MAAN,CAAaC,WAAnC,CAAzB;AAAA,gBAAqFP,KAAK,CAACE;AAA3F,OAA+ED,GAA/E;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAH2B,CAA5B;AAKA,QAAMO,gBAAgB,GAAGZ,IAAI,CAACa,OAAL,CAAaV,GAAb,CAAkBC,KAAD,IAAW;AACnD,UAAMC,GAAG,GAAI,GAAED,KAAK,CAACE,IAAK,IAAGF,KAAK,CAACG,EAAG,EAAtC;AACA,wBAAO;AAAK,MAAA,OAAO,EAAGC,KAAD,IAAWR,IAAI,CAACS,gBAAL,CAAsBD,KAAK,CAACE,MAAN,CAAaC,WAAnC,CAAzB;AAAA,gBAAqFP,KAAK,CAACE;AAA3F,OAA+ED,GAA/E;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHwB,CAAzB;;AAKA,QAAMS,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACd,IAAI,CAACe,OAAV,EAAmBf,IAAI,CAACgB,cAAL,CAAoB,EAApB;AACnBhB,IAAAA,IAAI,CAACgB,cAAL,CAAoB,IAApB;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIjB,IAAI,CAACe,OAAT,EAAkBf,IAAI,CAACgB,cAAL,CAAoB,EAApB;AAClBhB,IAAAA,IAAI,CAACgB,cAAL,CAAoB,KAApB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,OAAO,EAAEF,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,OAAO,EAAEG,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAWIC,YAAY,gBACZ;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBjB;AAAzB;AAAA;AAAA;AAAA;AAAA,YADY,gBAEZ;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBW;AAAzB;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3CD;;GAAMb,Y;;KAAAA,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { UserContext } from '../App'\n\nconst GenreOptions = () => {\n  // const [isMovieGenre, setIsMovieGenre] = useState(true)\n\n  const user = useContext(UserContext);\n\n  const generateMovieGenres = user.movieGenre.map((genre) => {\n    const key = `${genre.name}-${genre.id}`\n    return <div onClick={(event) => user.addSelectedGenre(event.target.textContent)} key={key}>{genre.name}</div>\n  })\n\n  const generateTVGenres = user.tvGenre.map((genre) => {\n    const key = `${genre.name}-${genre.id}`\n    return <div onClick={(event) => user.addSelectedGenre(event.target.textContent)} key={key}>{genre.name}</div>\n  })\n\n  const setMovieGenre = () => {\n    if (!user.isMovie) user.setMovieOption([])\n    user.setMovieOption(true)\n  }\n\n  const setTVGenre = () => {\n    if (user.isMovie) user.setMovieOption([])\n    user.setMovieOption(false)\n  }\n\n  return (\n    <div className='App-genres'>\n      <div className='App-options'>\n        <div onClick={setMovieGenre}>\n          Movie Genres\n        </div>\n        <div onClick={setTVGenre}>\n          TV Series Genres\n        </div>\n      </div>\n\n      <div>Choose a genre that you would like to base the generator</div>\n      { isMovieGenre ? \n        <div className='Genres'>{generateMovieGenres}</div> : \n        <div className='Genres'>{generateTVGenres}</div>\n      }\n    </div>\n  )\n}\n\nexport default GenreOptions;"]},"metadata":{},"sourceType":"module"}