{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Random.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../modules/Header\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst discoverMovie = process.env.REACT_APP_MOVIE_LIST;\n\nconst Random = () => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n\n  const getMovieList = async () => {\n    const movieListResponse = await fetch(discoverMovie);\n    const jsonMovieList = await movieListResponse.json();\n    setMovieList(jsonMovieList);\n  };\n\n  const generateMovies = movieList.results.map(movie => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: imagepath + movie.poster_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getGenres(movie.genre_ids)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Release Date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    getMovieLists();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \"Generate Random Movie or Series!\", generateMovies]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Random, \"bwhYmfNZu0Jsio3To6kJ5dYB+b0=\");\n\n_c = Random;\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/movie-suggestion/src/pages/Random.js"],"names":["Header","useState","useEffect","discoverMovie","process","env","REACT_APP_MOVIE_LIST","Random","movieList","setMovieList","getMovieList","movieListResponse","fetch","jsonMovieList","json","generateMovies","results","map","movie","imagepath","poster_path","original_title","getGenres","genre_ids","release_date","overview","id","getMovieLists"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAlC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMS,YAAY,GAAG,YAAW;AAC9B,UAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAACT,aAAD,CAArC;AACA,UAAMU,aAAa,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,EAA5B;AACAL,IAAAA,YAAY,CAACI,aAAD,CAAZ;AACD,GAJD;;AAMA,QAAME,cAAc,GAAGP,SAAS,CAACQ,OAAV,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtD,wBACE;AAAoB,MAAA,SAAS,EAAC,OAA9B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEC,SAAS,GAAGD,KAAK,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA,oBAAMF,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMC,SAAS,CAACJ,KAAK,CAACK,SAAP;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,uCAAoBL,KAAK,CAACM,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAMN,KAAK,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUP,KAAK,CAACQ,EAAhB;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZsB,CAAvB;AAcAxB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,sCAGGZ,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlCD;;GAAMR,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import Header from \"../modules/Header\"\nimport { useState, useEffect } from \"react\"\n\nconst discoverMovie = process.env.REACT_APP_MOVIE_LIST\n\nconst Random = () => {\n  const [movieList, setMovieList] = useState([])\n\n  const getMovieList = async() => {\n    const movieListResponse = await fetch(discoverMovie)\n    const jsonMovieList = await movieListResponse.json()\n    setMovieList(jsonMovieList) \n  }\n\n  const generateMovies = movieList.results.map((movie) => {\n    return (\n      <div key={movie.id} className='movie'>\n        <img className='image' src={imagepath + movie.poster_path}/>\n        <div className='movieContent'>\n          <div>{movie.original_title}</div> \n          <div>{getGenres(movie.genre_ids)}</div>\n          <div>Release Date: {movie.release_date}</div>\n          <div>{movie.overview}</div>\n        </div>\n      </div>\n    )\n  })\n\n  useEffect(() => {\n    getMovieLists()\n  }, [])\n\n  return (\n    <div>\n      <Header/>\n      Generate Random Movie or Series!\n      {generateMovies}\n    </div>\n  )\n}\n\nexport default Random;"]},"metadata":{},"sourceType":"module"}