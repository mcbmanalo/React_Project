{"ast":null,"code":"var _jsxFileName = \"/home/mcbmanalo/React_Personal_Project/src/pages/Random.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { SuggestContext } from \"../App\";\nimport Loading from \"../modules/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imagepath = process.env.REACT_APP_POSTER_PATH;\n\nconst Random = () => {\n  _s();\n\n  const suggested = useContext(SuggestContext);\n  const {\n    suggestedMovie,\n    genres,\n    loading,\n    isMovie\n  } = suggested;\n\n  const getGenres = genreIDs => {\n    if (loading || genreIDs === undefined) return '';\n    let movieGenre = [];\n    genres.map(genre => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name);\n    });\n    return movieGenre.join(', ');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        alt: suggestedMovie.title,\n        src: imagepath + suggestedMovie.poster_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieContent\",\n        children: [isMovie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: suggestedMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: suggestedMovie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getGenres(suggestedMovie.genre_ids)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), isMovie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Release Date: \", suggestedMovie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"First Air Date: \", suggestedMovie.first_air_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: suggestedMovie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Random, \"RpLjui6lladsVi0Rq/LlU9JINMk=\");\n\n_c = Random;\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["/home/mcbmanalo/React_Personal_Project/src/pages/Random.js"],"names":["useContext","SuggestContext","Loading","imagepath","process","env","REACT_APP_POSTER_PATH","Random","suggested","suggestedMovie","genres","loading","isMovie","getGenres","genreIDs","undefined","movieGenre","map","genre","includes","id","push","name","join","title","poster_path","genre_ids","release_date","first_air_date","overview"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,SAAS,GAAGR,UAAU,CAACC,cAAD,CAA5B;AACA,QAAM;AAACQ,IAAAA,cAAD;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA;AAAlC,MAA6CJ,SAAnD;;AAEA,QAAMK,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIH,OAAO,IAAIG,QAAQ,KAAKC,SAA5B,EAAuC,OAAO,EAAP;AACvC,QAAIC,UAAU,GAAG,EAAjB;AACAN,IAAAA,MAAM,CAACO,GAAP,CAAYC,KAAD,IAAW;AACpB,UAAIJ,QAAQ,CAACK,QAAT,CAAkBD,KAAK,CAACE,EAAxB,CAAJ,EAAiCJ,UAAU,CAACK,IAAX,CAAgBH,KAAK,CAACI,IAAtB;AAClC,KAFD;AAGA,WAAON,UAAU,CAACO,IAAX,CAAgB,IAAhB,CAAP;AACD,GAPD;;AASA,sBACE;AAAA,cACGZ,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEF,cAAc,CAACe,KAA3C;AAAkD,QAAA,GAAG,EAAErB,SAAS,GAAGM,cAAc,CAACgB;AAAlF;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,mBAEIb,OAAO,gBACP;AAAA,oBAAMH,cAAc,CAACe;AAArB;AAAA;AAAA;AAAA;AAAA,gBADO,gBAEP;AAAA,oBAAMf,cAAc,CAACa;AAArB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAME;AAAA,oBAAMT,SAAS,CAACJ,cAAc,CAACiB,SAAhB;AAAf;AAAA;AAAA;AAAA;AAAA,gBANF,EAQId,OAAO,gBACL;AAAA,uCAAoBH,cAAc,CAACkB,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,gBAEL;AAAA,yCAAsBlB,cAAc,CAACmB,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVN,eAYE;AAAA,oBAAMnB,cAAc,CAACoB;AAArB;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAtCD;;GAAMtB,M;;KAAAA,M;AAwCN,eAAeA,MAAf","sourcesContent":["import { useContext } from \"react\"\nimport { SuggestContext } from \"../App\"\nimport Loading from \"../modules/Loading\"\n\nconst imagepath = process.env.REACT_APP_POSTER_PATH\n\nconst Random = () => {\n  const suggested = useContext(SuggestContext)\n  const {suggestedMovie, genres, loading, isMovie} = suggested\n\n  const getGenres = (genreIDs) => {\n    if (loading || genreIDs === undefined) return ''\n    let movieGenre = []\n    genres.map((genre) => {\n      if (genreIDs.includes(genre.id)) movieGenre.push(genre.name)\n    })\n    return movieGenre.join(', ')\n  }\n  \n  return (\n    <div>\n      {loading ? \n        <Loading/> \n        :\n        <div className='movie'>\n          <img className='image' alt={suggestedMovie.title} src={imagepath + suggestedMovie.poster_path}/>\n          <div className='movieContent'>\n            {\n              isMovie ?\n              <div>{suggestedMovie.title}</div> :\n              <div>{suggestedMovie.name}</div>\n            }\n            <div>{getGenres(suggestedMovie.genre_ids)}</div>\n            {\n              isMovie ?\n                <div>Release Date: {suggestedMovie.release_date}</div> :\n                <div>First Air Date: {suggestedMovie.first_air_date}</div>\n            }\n            <div>{suggestedMovie.overview}</div>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Random;"]},"metadata":{},"sourceType":"module"}